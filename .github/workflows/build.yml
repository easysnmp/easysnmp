name: build
on:
  release:
    types: [published]
  push:
    branches:
      - 'actions'
      - 'actions-test'

jobs:
  linux-wheels:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Create manylinux wheels
        uses: RalfG/python-wheels-manylinux-build@v0.4.2
        with:
          system-packages: 'snmpd libsnmp-dev libperl-dev'
      - name: Install local dependencies
        run: sudo apt install -y snmpd libsnmp-dev libperl-dev
      - name: Create source dist
        run: sudo chown -R $USER . && python setup.py sdist
      - name: Remove linux_x86_64
        run: rm dist/*linux_x86_64.whl
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*

  macos-wheels:
    runs-on: macos-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
            brew install easysnmp/netsnmp-easysnmp/net-snmp
            echo 'export PATH="/usr/local/opt/net-snmp/bin:$PATH"' >> /Users/runner/.bash_profile
            export PATH="/usr/local/opt/net-snmp/bin:$PATH"
            echo 'export PATH="/usr/local/opt/net-snmp/sbin:$PATH"' >> /Users/runner/.bash_profile
            export PATH="/usr/local/opt/net-snmp/sbin:$PATH"
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel
      - name: Build wheels
        env:
          CIBW_BEFORE_BUILD_MACOS: python setup.py build
        run: python -m cibuildwheel --output-dir dist
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*

  publish-wheels:
    runs-on: ubuntu-latest
    needs: [linux-wheels, macos-wheels]
    if: ${{ always() }}
    steps:
      - name: Download wheel artifacts
        id: download
        uses: actions/download-artifact@v3
        with:
          path: ./dist
          name: wheels
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ github.event_name == 'release' && secrets.PYPI_API_TOKEN || secrets.TEST_PYPI_API_TOKEN }}
          verbose: true
          repository_url: ${{ github.event_name == 'release' && 'https://upload.pypi.org/legacy/' || 'https://test.pypi.org/legacy/' }}
          skip_existing: true
      - name: Add to release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*
